/**
 *	PostTaxationRequest.ds
 *	Uses the PostTax method to modify the state of a document saved to the AvaTax 
 *	database via the SalesInvoice method. 
 *
 *	@input Order : dw.order.Order
 *	@input controller : Boolean
 *	@output ReasonCode : String The reason code returned by Avatax (100 = Success)
 *	@output ErrorMsg : String
 */

var dwsvc		= require ("dw/svc");
var dwLogger	= require ("dw/system").Logger;
var guard = require('int_avatax/cartridge/scripts/guard');

function execute( args : PipelineDictionary ) : Number
{  
	try {	
		var service : dwsvc.Service = dwsvc.ServiceRegistry.get("avatax.soap.PostTax");
		var params : Object = {
			"order"			: args.Order,
			"merchantId" 	: service.configuration.credential.user,
			"securityKey" 	: service.configuration.credential.password
		};
		
		// Send request
		var taxationResponse = service.call(params);
		
		if (!empty(taxationResponse)) {
			args.ReasonCode = taxationResponse.object.postTaxResult.resultCode.value;
				
			if (args.ReasonCode != "Success") {
				var errorMsgs : String = "";
	
				if (!empty(taxationResponse.object.postTaxResult.messages)) {
					for each (let message in taxationResponse.object.postTaxResult.messages) {
						errorMsgs += message.summary;
					}
				}
				args.ErrorMsg = errorMsgs;
				dwLogger.getLogger("Avalara", "AvaTax").warn("[PostTaxationRequest.ds] PostTax attempt failed - {0}", errorMsgs);
			}
		}
		else {
			dwLogger.getLogger("Avalara", "AvaTax").warn("[PostTaxationRequest.ds] PostTax request failed. Empty response.");
			return PIPELET_ERROR;
		}
		
		if(args.controller) {
			var Response = {};
			Response.ReasonCode = args.ReasonCode;
			Response.ErrorMsg = args.ErrorMsg;
			return Response;
		}
		
		return PIPELET_NEXT;
	}
	catch(e) {
		dwLogger.getLogger("Avalara", "AvaTax").error("[PostTaxationRequest.ds] Error in taxation request - {0}", e.message);
		return PIPELET_ERROR;
	}
}

if(typeof exports != 'undefined') {
	exports.Execute = guard.ensure(['https'], execute);
}