/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
* @input Groups : Array This is an ECMAScript Array of customer group IDs to assign to the customer.
* @input Customer : dw.customer.Customer Customer to be assigned to the groups
* @output OutCustomer : dw.customer.Customer Customer to be assigned to the groups
*
*/
importPackage( dw.system );

function execute( args : PipelineDictionary ) : Number
{
	//old
	var oldcustomer : dw.customer.Customer = args.Customer;
	
	var groups : Array = args.Groups;
	//old
	
	var customer : dw.customer.Customer = args.Customer;
	var group : dw.customer.CustomerGroup = null;
	Logger.getLogger("VIPCustomerImport").debug("Assigning customer groups to the customer "+customer.profile.email);
	var progroup : dw.customer.CustomerGroup = dw.customer.CustomerMgr.getCustomerGroup("ProStaff");
	var empgroup : dw.customer.CustomerGroup = dw.customer.CustomerMgr.getCustomerGroup("employee");
		for(var i = 0; i < groups.length; i++) {
			group = dw.customer.CustomerMgr.getCustomerGroup(groups[i]);
			if(groups.length>0 && group==dw.customer.CustomerMgr.getCustomerGroup("VIP"))
			{
				if(customer.isMemberOfCustomerGroup(progroup))
				{
					progroup.unassignCustomer(customer);
				}			
				else if(customer.isMemberOfCustomerGroup(empgroup))
				
				{
					empgroup.unassignCustomer(customer);
				}
			}
			else{
				if(customer.isMemberOfCustomerGroup(empgroup) && group == dw.customer.CustomerMgr.getCustomerGroup("ProStaff"))
				{
					empgroup.unassignCustomer(customer);
				}
			}
		}
		for(var i = 0; i < groups.length; i++) {
			if(!empty(group)){
			
				Logger.getLogger("VIPCustomerImport").debug("Assigning customer "+customer.profile.email+" to " +groups[i]+" group");
				group.assignCustomer(customer);
			}
		}
	
	var newcustomer : dw.customer.Customer = customer;
   args.OutCustomer = customer;
    return PIPELET_NEXT;
}
