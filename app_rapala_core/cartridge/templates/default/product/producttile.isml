<iscontent type="text/html" charset="UTF-8" compact="true"/>
<isif condition="${(pdict.cache != null) ? pdict.cache : true}">
	<iscache type="relative" hour="24" varyby="price_promotion"/>
</isif>
<isinclude template="util/modules"/>
<iscomment>
	This template is best used via a **remote** include (Product-HitTile) and _not_ local include.
	This template renders a product tile using a product. The following parameters
	must be passed into the template module:

	product 		: the product to render the tile for
	showswatches 	: check, whether to render the color swatches (default is false)
	showpricing		: check, whether to render the pricing (default is false)
	showpromotion	: check, whether to render the promotional messaging (default is false)
	showrating		: check, whether to render the review rating (default is false)
	showcompare		: check, whether to render the compare checkbox (default is false)
</iscomment>

<isset name="Product" value="${pdict.product}" scope="page"/>
<isset name="role" value="${pdict.role}" scope="page"/>
<isset name="isEarlyBirdMessage" value="${false}" scope="page"/>
<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService')}">
	<isscript>
		importScript("app_disbestpractice:product/ProductImageSO.ds");
	</isscript>
</isif>
<isif condition="${!empty(Product)}">
	<iscomment>
		Get the colors selectable from the current product master or variant range if we
		need to determine them based on a search result.
	</iscomment>
	<isscript>
		// set default settings
		/*
			Relies on the fact that the represented product is a variant if color slicing is enabled
		 	See script API doc @ProductSearchHit.product
		*/
		var showswatches = pdict.showswatches || Product.isMaster();
		var showpricing = pdict.showpricing || false;
		var showpromotion = pdict.showpromotion || false;
		var showrating = pdict.showrating || false;
		var showcompare = pdict.showcompare || false;
		var isRecommendation = pdict.isRecommendation || false;

		var selectableColors = new dw.util.ArrayList();
		var imageSize = 'medium';
		var PVM = Product.variationModel;
		var colorVarAttr, selectedColor, imageSource, image;
		if (PVM) {
			colorVarAttr = PVM.getProductVariationAttribute('color');
			if (Product.variationGroup && colorVarAttr) {
				imageSource = selectedColor = PVM.getSelectedValue(colorVarAttr);
				if (!imageSource) {
					if (!PVM.variants.isEmpty()) {
						imageSource = PVM.defaultVariant;
						if (imageSource) {
							selectedColor = PVM.getVariationValue(imageSource, colorVarAttr);
						}
					}
				}
			} else if (Product.isMaster() && PVM.defaultVariant) {
				if (colorVarAttr) {
					imageSource = PVM.defaultVariant;
					selectedColor = imageSource.variationModel.getSelectedValue(colorVarAttr);
				} else {
					imageSource = PVM.master;
				}
			} else if (Product.isVariant() && colorVarAttr) {
				imageSource = selectedColor = PVM.getSelectedValue(colorVarAttr);
				if (!imageSource) {
					if (!PVM.variants.isEmpty()) {
						imageSource = PVM.variants[0];
						selectedColor = imageSource.variationModel.getSelectedValue(colorVarAttr);
					}
				}
			} else {
				// standard product, product set or bundle
				imageSource = Product;
			}
		} else {
			imageSource = Product;
		}
		if( Product.master )
		{
			if( colorVarAttr != null )
			{
				var allColors : dw.util.Collection = PVM.getAllValues( colorVarAttr );
				
				// filter out colors with not orderable variants
				for each( var color in allColors )
				{
					if( PVM.hasOrderableVariants( colorVarAttr, color ) )
					{
						selectableColors.add( color );
					}
				}
			}
		}
		
		if(dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService')){
			imageDesktop = new ProductImage('PLPDesktop',Product,0,pdict.role);
			imageIPad = new ProductImage('PLPIPad',Product,0,pdict.role);
			imageIPhone = new ProductImage('PLPIPhone',Product,0,pdict.role);
			imageDesktopSmall = new ProductImage('PLPDesktop',Product,0,"grid");
			imageIPadSmall = new ProductImage('PLPIPad',Product,0,"grid");
			imageIPhoneSmall = new ProductImage('PLPIPhone',Product,0,"grid");
			image = imageDesktop;
		}else{
			image = imageSource.getImage(imageSize, 0);
		}

		// Generate link to product detail page: by default it's just the product of the product search hit.
		// If a color variation is available, the first color is used as link URL.
		//RAP-3006 - added cgid because the breadcumb will not work otherwise.  It needs to pass the category ID
		// in order to show the proper category the user clicked on
		var productUrl = URLUtils.url('Product-Show', 'pid', Product.ID, 'cgid', pdict.CurrentHttpParameterMap.cgid);
		/*if (selectedColor) {
			productUrl = Product.variationModel.urlSelectVariationValue('Product-Show', colorVarAttr, selectedColor) + '&cgid=' + pdict.CurrentHttpParameterMap.cgid;
		}*/
	 	
	 	var imageRatio = parseFloat(Resource.msg('productImage.imageRatio', 'product', null));
	 	var height = Math.floor(parseInt(Resource.msg('productImage.'+pdict.p_role+'.width', 'product', null)) * imageRatio); 
	</isscript>
	<iscomment>JIRA PREV-50:Next and Previous links will not be displayed on PDP if user navigate from Quick View. Added data-cgid attribute </iscomment>
	<div class="product-tile" id="${Product.UUID}" data-itemid="${Product.ID}"  data-cgid="${pdict.CurrentHttpParameterMap.cgid.value}"><!-- dwMarker="product" dwContentID="${Product.UUID}" -->
		<iscomment>Image</iscomment>
		<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
		<div class="product-image"><!-- dwMarker="product" dwContentID="${Product.UUID}" -->
			<iscomment>Render the thumbnail</iscomment>
			<iscomment>If image couldn't be determined, display a "no image" medium.</iscomment>
			<isif condition="${!empty(image)}">
				<isset name="thumbnailUrl" value="${image.getURL()}" scope="page"/>
				<isset name="thumbnailAlt" value="${image.alt}" scope="page"/>
				<isset name="thumbnailTitle" value="${image.title}" scope="page"/>
				<isset name="imageURLDesktop" value="${imageDesktop.getURL()}" scope="page"/>
				<isset name="imageURLIPad" value="${imageIPad.getURL()}" scope="page"/>
				<isset name="imageURLIPhone" value="${imageIPhone.getURL()}" scope="page"/>
				<isset name="imageURLDesktopSmall" value="${imageDesktopSmall.getURL()}" scope="page"/>
				<isset name="imageURLIPadSmall" value="${imageIPadSmall.getURL()}" scope="page"/>
				<isset name="imageURLIPhoneSmall" value="${imageIPhoneSmall.getURL()}" scope="page"/>
				
			<iselse/>
				<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagemedium.png')}" scope="page"/>
				<isset name="thumbnailAlt" value="${Product.name}" scope="page"/>
				<isset name="thumbnailTitle" value="${Product.name}" scope="page"/>
			</isif>

			<iscomment>RAP-2997, if the product name is missing from the image title, add it in</iscomment>
			<isif condition="${thumbnailTitle.charAt(0) == ','}">
				<isset name="thumbnailTitle" value="${Product.name + thumbnailTitle}" scope="page"/>
			</isif>
			<isif condition="${thumbnailAlt.charAt(0) == ','}">
				<isset name="thumbnailAlt" value="${Product.name + thumbnailAlt}" scope="page"/>
			</isif>

			<isscript>
				var gtmProductData = {};
				var productLink = productUrl;
				if (dw.system.Site.getCurrent().getCustomPreferenceValue('enableGoogleTagManager')) {
					gtmProductData = require('*/cartridge/scripts/googletags/Site_TagManager').getProductData(Product.ID);

					// update list in gtmProductData if it's category search 
					if (pdict.CurrentHttpParameterMap.cgid && !empty(pdict.CurrentHttpParameterMap.cgid.value)) {
						var categoryId = pdict.CurrentHttpParameterMap.cgid.value;
						var categorySearch = require('*/cartridge/scripts/googletags/Site_TagManager').getCategorySearchById(categoryId);

						if (!empty(categorySearch))	{
							gtmProductData.list = categorySearch;

							//update url with adding parameter tag
							productLink = URLUtils.url('Product-Show', 'pid', Product.ID, 'cgid', pdict.CurrentHttpParameterMap.cgid, 'taglist', gtmProductData.list);
						}
					}
				}
			</isscript>
			<a class="thumb-link" href="${productLink}" title="${Product.name}"
				data-gtmdata="${JSON.stringify(gtmProductData)}">
				<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService') || dw.system.Site.getCurrent().getCustomPreferenceValue('isEndToEndMerchant')}" > 
					<img src="${imageURLDesktopSmall}" alt="${thumbnailAlt}" class="tile-img"
						data-small-src="${imageURLDesktopSmall}" 
						data-large-src="${imageURLDesktop}"/>
				<iselse/>
					<img src="${thumbnailUrl}" alt="${thumbnailAlt}"/>
				</isif>
			</a>
				<a id="quickviewbutton" class="quickview" href="${productLink}"
					data-gtmdata="${JSON.stringify(gtmProductData)}">
					<isprint value="${Resource.msg('product.quickview','product',null)}"/>
				</a>
		</div>
		
		<iscomment>Display brand name for recommendations</iscomment>
		<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
		<isif condition="${isRecommendation == 'true'}">
			<div class="brandName">
				<img src="${URLUtils.staticURL('/images/brandlogosrec/'+Product.brand+'.svg')}" />
			</div>
		</isif>
		<iscomment>Product Name</iscomment>
		<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
		<div class="product-name">
			<a class="name-link" href="${productLink}" title="${Resource.msgf('product.label','product',null, Product.name)}" encoding="off"
				data-gtmdata="${JSON.stringify(gtmProductData)}">
				<isproductname productname="${Product.name}"/>
			</a>
		</div>

		<iscomment>Swatches</iscomment>
		<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
		<isif condition="${showswatches && isRecommendation == 'false'}">
			<iscomment>
				Render the color swatch secion for a product. We show color swatches for color variations known to the product master.
			</iscomment>

			<isif condition="${!empty(selectableColors) && selectableColors.size() > 1 && !empty(colorVarAttr)}">
				<div class="product-swatches">
					<iscomment>render a link to the palette and hide the actual palette if there are more than five colors contained</iscomment>
					<isif condition="${selectableColors.size() > 5}">
						<a class="product-swatches-all">${Resource.msg('productresultarea.viewallcolors','search',null)}</a>(<isprint value="${selectableColors.size()}"/>)
					</isif>

					<iscomment>render the palette, the first swatch is always preselected</iscomment>
					<ul class="swatch-list<isif condition="${selectableColors.size() > 5}"> swatch-toggle</isif>">
						<isloop items="${selectableColors}" var="colorValue" status="varloop">
							<iscomment>Determine the swatch and the thumbnail for this color</iscomment>
							<isset name="colorSwatch" value="${colorValue.getImage('swatch')}" scope="page"/>
							<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService') || dw.system.Site.getCurrent().getCustomPreferenceValue('isEndToEndMerchant')}">
								<isset name="colorThumbnailDesktop" value="${new ProductImage('PLPDesktop',colorValue,0,'grid')}" scope="page"/>
								<isset name="colorThumbnail" value="${colorThumbnailDesktop}" scope="page"/>
							<iselse/>
								<isset name="colorThumbnail" value="${colorValue.getImage('medium')}" scope="page"/>
							</isif>
							<iscomment>If images couldn't be determined, display a "no image" thumbnail</iscomment>
							<isif condition="${!empty(colorSwatch)}">
								<isset name="swatchUrl" value="${colorSwatch.getURL()}" scope="page"/>
								<isset name="swatchAlt" value="${colorSwatch.alt}" scope="page"/>
								<isset name="swatchTitle" value="${colorSwatch.title}" scope="page"/>
							<iselse/>
								<isset name="swatchUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
								<isset name="swatchAlt" value="${colorValue.displayValue}" scope="page"/>
								<isset name="swatchTitle" value="${colorValue.displayValue}" scope="page"/>
							</isif>
							<isif condition="${!empty(colorThumbnail)}">
								<isset name="thumbnailUrl" value="${colorThumbnail.getURL()}" scope="page"/>
								<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService') || dw.system.Site.getCurrent().getCustomPreferenceValue('isEndToEndMerchant')}">
									<isset name="thumbnailUrlDesktop" value="${colorThumbnailDesktop.getURL()}" scope="page"/>
								</isif>
								<isset name="thumbnailAlt" value="${colorThumbnail.alt}" scope="page"/>
								<isset name="thumbnailTitle" value="${colorThumbnail.title}" scope="page"/>
							<iselse/>
								<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
								<isset name="thumbnailAlt" value="${colorValue.displayValue}" scope="page"/>
								<isset name="thumbnailTitle" value="${colorValue.displayValue}" scope="page"/>
							</isif>
							<isif condition="${!empty(selectedColor)}">
								<isset name="preselectCurrentSwatch" value="${colorValue.value == selectedColor.value}" scope="page"/>
							<iselse/>
								<isset name="preselectCurrentSwatch" value="${varloop.first}" scope="page"/>
							</isif>

							<iscomment>build the proper URL and append the search query parameters</iscomment>
							<isset name="swatchproductUrl" value="${Product.variationModel.url('Product-Show', colorVarAttr, colorValue.value)}" scope="page"/>
							<isif condition="${!empty(pdict.ProductSearchResult)}">
								<isset name="swatchproductUrl" value="${pdict.ProductSearchResult.url(swatchproductUrl)}" scope="page"/>
							</isif>
							<iscomment>render a single swatch, the url to the proper product detail page is contained in the href of the swatch link</iscomment>
							<li>
								<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService') || dw.system.Site.getCurrent().getCustomPreferenceValue('isEndToEndMerchant')}" >
									<isif condition="${selectableColors.size() < 6}">
										<a href="${productUrl}" class="swatch ${(preselectCurrentSwatch) ? 'selected' : ''}" title="${swatchTitle}">
											<img class="swatch-image" src="${swatchUrl}" alt="${swatchAlt}"  data-thumb='{"src":"${thumbnailUrlDesktop}"}'/>
										</a>
									<iselse>
										<a href="${productUrl}" data-href="${swatchUrl}" class="swatch ${(preselectCurrentSwatch) ? 'selected' : ''}" title="${swatchTitle}">
											<img class="swatch-image" src="" alt="${swatchAlt}"  data-thumb='{"src":"${thumbnailUrlDesktop}"}'/>
										</a>
									</iselse>
									</isif>
								<iselse/>
									<a href="${productUrl}" class="swatch ${(preselectCurrentSwatch) ? 'selected' : ''}" title="${swatchTitle}">
										<img class="swatch-image" src="${swatchUrl}" alt="${swatchAlt}"  data-thumb='{"src":"${thumbnailUrl}"}'/>
									</a>
								</isif>
							</li>
						</isloop>
					</ul><!-- .swatch-list -->
				</div><!-- .product-swatches -->
			</isif>
		</isif>
		
		<iscomment>Pricing</iscomment>
		<iscomment>For Responsive </iscomment>
		<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
		<isif condition="${showpricing}">
			<div class="product-pricing pricing mobileHide">
				<isscript>
					var currencyCode = session.getCurrency().getCurrencyCode();
					var price = {};
					var PriceModelSource = Product;
					var PriceModel;
					if (Product.productSet) {
						price.class = 'product-set-price ';
						price.value = Resource.msg('global.buyall', 'locale', null);
						price.title = Resource.msg('product.setprice', 'product', null);
					} else if ((Product.master || Product.variationGroup) && pdict.CurrentHttpParameterMap.pricerange.stringValue == 'true') {
						// Product master or variation group price range depending on the represented variants
						price.class = 'product-sales-price';
						price.value = 'Starting at '+dw.util.StringUtils.formatMoney(dw.value.Money(pdict.CurrentHttpParameterMap.minprice, currencyCode));
						price.title = Resource.msg('product.pricerange', 'product', null);
					} else if ((Product.master || Product.variationGroup) && Product.priceModel.isPriceRange()) {
						price.class = 'product-sales-price';
						price.value = session.getCurrency().getSymbol() + Product.priceModel.minPrice.value.toFixed(2) + ' - ' + session.getCurrency().getSymbol() + Product.priceModel.maxPrice.value.toFixed(2);
						//price.value = 'helloo';
						price.title = Resource.msg('product.pricerange', 'product', null);
					} else {
						// For product master or variation group without a price range get the pricing from first variant
						if ((Product.master || Product.variationGroup) && pdict.CurrentHttpParameterMap.pricerange.stringValue != 'true') {
							PriceModelSource = Product.variants[0];
						}
						// Regular pricing through price model of the product. If the product is an option product, we have to initialize the product price model with the option model.
						if (Product.optionProduct) {
							PriceModel = PriceModelSource.getPriceModel(Product.getOptionModel());
						} else {
							PriceModel = PriceModelSource.getPriceModel();
						}
					}
				</isscript>
				<iscomment>
					Check whether the product has price in the sale pricebook. If so, then
					display two prices: crossed-out standard price and sales price.

					TODO: should find a better way to include logic.
				</iscomment>
				<isinclude template="product/components/standardprice"/>
				<isscript>
					var prices = [];
					var SalesPrice, ShowStandardPrice, extraPrice, hem;
					// simulate the same if else block from before the template include break
					if (!Product.productSet && ((!empty(pdict.CurrentHttpParameterMap.pricerange.stringValue) && pdict.CurrentHttpParameterMap.pricerange.stringValue != 'true') || !Product.priceModel.isPriceRange()) && PriceModel != null && !empty(PriceModel)) {
						SalesPrice = PriceModel.getPrice();
						ShowStandardPrice = StandardPrice.available && SalesPrice.available && StandardPrice.compareTo(SalesPrice) == 1;
						if (ShowStandardPrice) {
							price.class = 'product-standard-price';
							price.title = Resource.msg('product.standardprice', 'product', null);
							price.value = StandardPrice;
							extraPrice = {};
							extraPrice.class = 'product-sales-price discount-price';
							extraPrice.title = Resource.msg('product.saleprice', 'product', null);
							extraPrice.value = SalesPrice;
					
						} else {
							price.class = 'product-sales-price';
							price.title = Resource.msg('product.saleprice', 'product', null);
							price.value = SalesPrice;
						}
					}
					prices.push(price);
					if (extraPrice) {prices.push(extraPrice);}
				</isscript>
				 <isloop items="${prices}" var="productPrice">
					<isif condition="${productPrice.value == dw.value.Money.NOT_AVAILABLE && !empty(Product.custom.earlyBirdMessage)}">
						<isset name="isEarlyBirdMessage" value="${true}" scope="page"/>
						<span class="ebm-message"><isprint value="${Product.custom.earlyBirdMessage}" /></span>
					<iselse/>
						<span class="${productPrice.class}" title="${productPrice.title}"><isprint value="${productPrice.value}"/></span>
					</isif>
				</isloop>
			</div>
		</isif>
		
		<iscomment>Promotion</iscomment>
		<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
		<isif condition="${pdict.CurrentHttpParameterMap.isRecommendation!=null && pdict.CurrentHttpParameterMap.isRecommendation=='false'}"> 
			<isif condition="${showpromotion}">
					<isset name="promos" value="${dw.campaign.PromotionMgr.activeCustomerPromotions.getProductPromotions(Product)}" scope="page"/>
					<isif condition="${!empty(promos)}">
					<div class="product-promo">
						<div class="promotional-message">
							<isloop items="${promos}" alias="promo" status="promoloopstate">
						   	 	<isif condition="${promo.custom.disableCalloutMessage != null && !promo.custom.disableCalloutMessage}">  
						   	 		<isprint value="${promo.calloutMsg}" encoding="off"/>
						   	 	</isif>  
						   	</isloop>
						</div>
					</div>
					</isif>
			</isif>
		</isif>
		
		<iscomment>Pricing</iscomment>
		<iscomment>For Desktop </iscomment>
		<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
		<isif condition="${showpricing}">
			<div class="product-pricing pricing desktopHide">
				<isloop items="${prices}" var="productPrice">
					<isif condition="${productPrice.value == dw.value.Money.NOT_AVAILABLE && !empty(Product.custom.earlyBirdMessage)}">
						<isset name="isEarlyBirdMessage" value="${true}" scope="page"/>
						<span class="ebm-message"><isprint value="${Product.custom.earlyBirdMessage}" /></span>	
					<iselse/>
						<span class="${productPrice.class}" title="${productPrice.title}"><isprint value="${productPrice.value}"/></span>
					</isif>
				</isloop>
			</div>
		</isif>
		
		<div class="product-colors-size">
			<isif condition="${pdict.CurrentHttpParameterMap.isRecommendation!=null && pdict.CurrentHttpParameterMap.isRecommendation=='false'}"> 
				<iscomment>New Flag</iscomment>
				<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
				<isdisplayvariantnew p_product="${Product}"/>
				
				<iscomment>New Flag and Size</iscomment>
				<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
				<isdisplayvariantnewcolorsize p_product="${Product}"/>
				
				<iscomment>New Pak and Size</iscomment>
				<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
				<isdisplayvariantnewpaksize p_product="${Product}"/>
			</isif>
		</div>
		<isif condition="${pdict.CurrentHttpParameterMap.isRecommendation!=null && pdict.CurrentHttpParameterMap.isRecommendation=='true'}"> 
			<isif condition="${showpromotion}">
					<isset name="promos" value="${dw.campaign.PromotionMgr.activeCustomerPromotions.getProductPromotions(Product)}" scope="page"/>
					<isif condition="${!empty(promos)}">
						<isloop items="${promos}" alias="promo" status="promoloopstate">
							<isif condition="${promo.custom.disableCalloutMessage != null && !promo.custom.disableCalloutMessage}"> 
						   	<div class="product-promo">
						   	<div class="promotional-message desktopHide">
						   	 			<isprint value="${promo.calloutMsg}" encoding="off"/>
							</div>
							</div>
						   	</isif>  
						</isloop>
					</isif>
			</isif>
		
			<div class="newrecommendation">
			<iscomment>New Flag</iscomment>
			<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
			<isdisplayvariantnew p_product="${Product}"/>
			
			<iscomment>New Flag and Size</iscomment>
			<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
			<isdisplayvariantnewcolorsize p_product="${Product}"/>
			
			<iscomment>New Pak and Size</iscomment>
			<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
			<isdisplayvariantnewpaksize p_product="${Product}"/>				
			
			<iscomment>out of stock label</iscomment>
			<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
			</div>
		</isif>
	
		<isset name="count" value="${require('app_rapala_core/cartridge/scripts/util/UtilityHelpers.ds').getAvailability(Product)}" scope="page"/>
		<div id="stock">
			<isif condition="${count == 0 && !isEarlyBirdMessage}">
				<span class="out_stock"><isprint value="${Resource.msg('product.outofstock','product',null)}"/></span> 
			</isif>
		</div>
	</div><!--  END: .product-tile -->
</isif>
