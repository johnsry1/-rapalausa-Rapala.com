<iscomment>
	This template renders a product in the search result using a ProductSearchHit object.
</iscomment>
<isinclude template="util/modules"/>
<isif condition="${pdict.productsperrow == null}">
	<isset name="productsperrow" value="${3}" scope="page"/>
<iselse>
	<isset name="productsperrow" value="${pdict.productsperrow}" scope="page"/>
</isif>

<iscomment>This is used to get the description in the subcategory landing page </iscomment>
<isscript>
	importScript( "common/GetCount.ds" );
	importScript( "common/GetCategoryprods.ds" );
</isscript>
<isif condition="${SubcategoryHit.onlineProducts.size()>0}">
	<isif condition="${!empty(SubcategoryHit) && !empty(SubcategoryHit.getOnlineProducts().iterator().hasNext())}">
		<isif condition="${!empty(SubcategoryHit.getOnlineProducts().iterator())}">
			<div class="subcat-header">
				<h2>
					<isprint value="${SubcategoryHit.displayName}"/>
				</h2>
				<isset name="count" value="${getcategoryProductCount(SubcategoryHit.ID)}" scope="page"/>
				<span>-<a class="" href="${URLUtils.https('Search-Show','cgid', SubcategoryHit.getID())}">${Resource.msg('product.seeall','product',null)} <isprint value="${count.toFixed()}"/></a></span>
			</div>
		</isif>
		<div class="clear"></div>
		<iscomment>Set the product of the product search hit locally for reuse</iscomment>
		<div class="productlisting sub-cat">
			<isloop items="${SubcategoryHit.getOnlineProducts().iterator()}" var="ProductHit" status="subcatloopstatus">
			<isset name="Product" value="${ProductHit}" scope="page"/>

			<isscript>
				importScript("app_disbestpractice:product/ProductImageSO.ds");
				// set default settings
				/*
					Relies on the fact that the represented product is a variant if color slicing is enabled
				 	See script API doc @ProductSearchHit.product
				*/

				var selectableColors = new dw.util.ArrayList();
				var imageSize = 'medium';
				var PVM = Product.variationModel;
				var colorVarAttr, selectedColor, imageSource, image;
				if (PVM) {
					colorVarAttr = PVM.getProductVariationAttribute('color');
					if (colorVarAttr) {
						selectableColors = PVM.getFilteredValues(colorVarAttr);
					}
					if (Product.variationGroup && colorVarAttr) {
						imageSource = selectedColor = PVM.getSelectedValue(colorVarAttr);
						if (!imageSource) {
							if (!PVM.variants.isEmpty()) {
								imageSource = PVM.defaultVariant;
								if (imageSource) {
									selectedColor = PVM.getVariationValue(imageSource, colorVarAttr);
								}
							}
						}
					} else if (Product.isMaster() && PVM.defaultVariant) {
						if (colorVarAttr) {
							imageSource = PVM.defaultVariant;
							selectedColor = imageSource.variationModel.getSelectedValue(colorVarAttr);
						} else {
							imageSource = PVM.master;
						}
					} else if (Product.isVariant() && colorVarAttr) {
						imageSource = selectedColor = PVM.getSelectedValue(colorVarAttr);
						if (!imageSource) {
							if (!PVM.variants.isEmpty()) {
								imageSource = PVM.variants[0];
								selectedColor = imageSource.variationModel.getSelectedValue(colorVarAttr);
							}
						}
					} else {
						// standard product, product set or bundle
						imageSource = Product;
					}
				} else {
					imageSource = Product;
				}

				if(dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService') || dw.system.Site.getCurrent().getCustomPreferenceValue('isEndToEndMerchant')){
					imageDesktop = new ProductImage('PLPDesktop',Product,0,"grid");
					imageIPad = new ProductImage('PLPIPad',Product,0,"grid");
					imageIPhone = new ProductImage('PLPIPhone',Product,0,"grid");
					image = imageDesktop;
				}else{
					image = imageSource.getImage(imageSize, 0);
				}

				// Generate link to product detail page: by default it's just the product of the product search hit.
				// If a color variation is available, the first color is used as link URL.
				//RAP-3006 - added cgid because the breadcumb will not work otherwise.  It needs to pass the category ID
				// in order to show the proper category the user clicked on
				var productUrl = URLUtils.url('Product-Show', 'pid', Product.ID, 'cgid', pdict.CurrentHttpParameterMap.cgid);
				if (selectedColor) {
					productUrl = Product.variationModel.urlSelectVariationValue('Product-Show', colorVarAttr, selectedColor) + '&cgid=' + pdict.CurrentHttpParameterMap.cgid;
				}

			 	var imageRatio = parseFloat(Resource.msg('productImage.imageRatio', 'product', null));
			 	var height = Math.floor(parseInt(Resource.msg('productImage.'+"grid"+'.width', 'product', null)) * imageRatio);
			</isscript>


			<iscomment>
				Get the colors selectable from the current product master or variant range if we
				need to determine them based on a search result.
			</iscomment>

		    <iscomment>
				Generate link to product detail page: by default it's just the product of the product search hit.
				If a color variation is available, the first color is used as link URL.
			</iscomment>
			<isset name="productUrl" value="${URLUtils.https('Product-Show', 'pid', Product.ID)}" scope="page"/>

		    <iscomment>append the paging parameters to the product URL</iscomment>
			<isset name="productUrl" value="${productUrl.append('start', starting)}" scope="page"/>

			<iscomment>append the search query parameters to the product URL</iscomment>
			<isif condition="${!empty(pdict.ProductSearchResult)}">
				<isset name="productUrl" value="${pdict.ProductSearchResult.url( productUrl )}" scope="page"/>
			</isif>

			<div class="product-tile producttile grid-tile cell <isif condition="${(subcatloopstatus.count > 2)}"> subcatproduct</isif>" id="${Product.UUID}" data-itemid="${Product.ID}"  data-cgid="${pdict.CurrentHttpParameterMap.cgid.value}"><!-- dwMarker="product" dwContentID="${Product.UUID}" -->
				<isobject object="${SubcategoryHit}" view="searchhit">
		        <iscomment>Image</iscomment>
				<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
				<div class="product-image"><!-- dwMarker="product" dwContentID="${Product.UUID}" -->
					<iscomment>Render the thumbnail</iscomment>
					<iscomment>If image couldn't be determined, display a "no image" medium.</iscomment>
					<isif condition="${!empty(image)}">
						<isset name="thumbnailUrl" value="${image.getURL()}" scope="page"/>
						<isset name="thumbnailAlt" value="${image.alt}" scope="page"/>
						<isset name="thumbnailTitle" value="${image.title}" scope="page"/>
					<iselse/>
						<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagemedium.png')}" scope="page"/>
						<isset name="thumbnailAlt" value="${Product.name}" scope="page"/>
						<isset name="thumbnailTitle" value="${Product.name}" scope="page"/>
					</isif>

					<iscomment>RAP-2997, if the product name is missing from the image title, add it in</iscomment>
					<isif condition="${thumbnailTitle.charAt(0) == ','}">
						<isset name="thumbnailTitle" value="${Product.name + thumbnailTitle}" scope="page"/>
					</isif>
					<isif condition="${thumbnailAlt.charAt(0) == ','}">
						<isset name="thumbnailAlt" value="${Product.name + thumbnailAlt}" scope="page"/>
					</isif>
					<isscript>
						var gtmProductData = {};
						if (dw.system.Site.getCurrent().getCustomPreferenceValue('enableGoogleTagManager')) {
							gtmProductData = require('*/cartridge/scripts/googletags/Site_TagManager').getProductData(Product.ID);
						}
					</isscript>
					<a class="thumb-link" href="${productUrl}" title="${Product.name}"
						data-gtmdata="${JSON.stringify(gtmProductData)}">
						<isif condition="${dw.system.Site.getCurrent().getCustomPreferenceValue('useDynamicImagingService') || dw.system.Site.getCurrent().getCustomPreferenceValue('isEndToEndMerchant')}" >
							<img src="${imageDesktop.getURL()}" alt="${thumbnailAlt}" class="tile-img"/>
						<iselse/>
							<img src="${thumbnailUrl}" alt="${thumbnailAlt}"/>
						</isif>
					</a>
					<a id="quickviewbutton" class="quickview" href="${productUrl}"
						data-gtmdata="${JSON.stringify(gtmProductData)}">
						QUICK VIEW
					</a>
				</div>
				<div class="product-name">
					<a class="name-link" href="${productUrl}" title="${Product.name}"
						data-gtmdata="${JSON.stringify(gtmProductData)}">
						<isproductname productname="${Product.name}"/>
					</a>
				</div><!-- END: name -->
				<div class="product-promo">
					<iscomment> If custom.abilityForSale is not true, then do not display price OR promotions </iscomment>
		            <isif condition="${(Product.custom.availableForSale != null) && (Product.custom.availableForSale != false)}">

					<iscomment>Render information on active product promotions</iscomment>
					<isset name="promos" value="${dw.campaign.PromotionMgr.activeCustomerPromotions.getProductPromotions(Product)}" scope="page"/>

					<isif condition="${!empty(promos)}">
						<div class="promotionalMessage">
							<isloop items="${promos}" var="promo">
								<isif condition="${promo.custom.disableCalloutMessage != null && !promo.custom.disableCalloutMessage}">
									<isprint value="${(promo.calloutMsg)}" encoding="off"/>
								</isif>
							</isloop>
						</div>
					</isif>
					</isif>
				</div><!-- END: promo -->

					<div class="product-pricing pricing">
						<iscomment> If custom.abilityForSale is not true, then do not display price OR promotions </iscomment>
			            <isif condition="${(Product.custom.availableForSale != null) && (Product.custom.availableForSale != false)}">

						<iscomment>Renders pricing information depending on the option or variation model, as well as scaled prices and so on.</iscomment>
						<div class="price">
							<isif condition="${Product.productSet}">
								<iscomment>Product set pricing</iscomment>
								<div class="productsetprice">${Resource.msg('global.buyall','locale',null)}</div>
							<iselseif condition="${Product.master && Product.priceModel.priceRange}"/>
								<iscomment>Product master price range depending on the represented variants</iscomment>
									<div class="salesprice">${Resource.msg('pricing.startingat','product',null)} <isprint value="${Product.priceModel.minPrice}"/></div>
							<iselse/>
								<iscomment>For Product master without a price range get the pricing from firstRepresentedProduct </iscomment>
								<isif condition="${Product.master && !Product.priceModel.priceRange}"/>
									<iscomment>Preserve current product instance</iscomment>
									<isset name="OrgProduct" value="${Product}" scope="page"/>
									<isset name="Product" value="${Product.variationModel.getVariants()[0]}" scope="page"/>
								</isif>
								<iscomment>
									Regular pricing through price model of the product. If the product is an option product,
									we have to initialize the product price model with the option model.
								</iscomment>
								<isif condition="${Product.optionProduct}">
									<isset name="PriceModel" value="${Product.getPriceModel(Product.getOptionModel())}" scope="page"/>
								<iselse/>
									<isset name="PriceModel" value="${Product.getPriceModel()}" scope="page"/>
								</isif>

								<iscomment>
									Check whether the product has price in the sale pricebook. If so, then
									display two prices: crossed-out standard price and sales price.
								</iscomment>
								<isinclude template="product/components/standardprice"/>

								<!-- <isset name="SalesPrice" value="${Product.priceModel.minPrice}" scope="page"/> -->

								<isset name="ShowStandardPrice" value="${StandardPrice.available && SalesPrice.available && StandardPrice.compareTo(SalesPrice) == 1}" scope="page"/>

								<isif condition="${ShowStandardPrice}">
									<div class="discountprice">
										<div class="standardprice"><isprint value="${StandardPrice}"/></div>
										<div class="salesprice"><isprint value="${SalesPrice}"/></div>
									</div>
								<iselse/>
									<div class="salesprice">
										<isif condition="${SalesPrice == dw.value.Money.NOT_AVAILABLE && !empty(Product.custom.earlyBirdMessage)}">
											<isprint value="${Product.custom.earlyBirdMessage}"/>
										<iselse/>
											<isprint value="${SalesPrice}"/>
										</isif>
									</div>
								</isif>
								<isif condition="${!empty(pdict.OrgProduct)}">
									<iscomment>Restore current product instance</iscomment>
									<isset name="Product" value="${OrgProduct}" scope="page"/>
									<isset name="OrgProduct" value="${null}" scope="page"/>
								</isif>
							</isif>
						</div>
						</isif>
						<div class="product-size-colors">
						<iscomment>New Flag</iscomment>
								<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
								<isdisplayvariantnew p_product="${Product}"/>

								<iscomment>New Flag and Size</iscomment>
								<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
								<isdisplayvariantnewcolorsize p_product="${Product}"/>

								<iscomment>New Pak and Size</iscomment>
								<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
								<isdisplayvariantnewpaksize p_product="${Product}"/>
						</div>
						<iscomment>out of stock label</iscomment>
						<iscomment>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</iscomment>
						<isset name="count" value="${require('app_rapala_core/cartridge/scripts/util/UtilityHelpers.ds').getAvailability(ProductHit)}" scope="page"/>
						<div id="stock">
							<isif condition="${count == 0}">
								<span class="out_stock"><isprint value="${Resource.msg('product.outofstock','product',null)}"/></span>
							</isif>
						</div>
					</div><!-- END: pricing -->
				</isobject>
			</div>

			<isif condition="${(subcatloopstatus.count >= 4)}">
				<isbreak/>
			</isif>
		</isloop>
	</div>

	<div class="clear"></div>
		<!-- END: producttile -->
		<!-- ProductSearchHit was not in dictionary, so blank. -->
	</isif>
<iselse/>
	<isif condition="${subcatcount>0}">
		<div class="subcat-header">
			<h2>
				<isprint value="${SubcategoryHit.displayName}"/>
			</h2>
			<isset name="count" value="${getcategoryProductCount(SubcategoryHit.ID)}" scope="page"/>
			<span>-<a class="" href="${URLUtils.https('Search-Show','cgid', SubcategoryHit.getID())}">${Resource.msg('product.seeall','product',null)} <isprint value="${count.toFixed()}"/></a></span>
		</div>

		<isinclude template="product/subcatprodsearchhittilewithoutprods"/>
	</isif>
</isif>

