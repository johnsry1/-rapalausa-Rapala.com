/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*-	@input  CurrentForms : dw.web.Forms	
*	@input CurrentForms : dw.web.FormGroup
*   @output ExampleOut : String
*
*/
importPackage( dw.system );

function decalData(insiderForm)
{
	var optedForm = insiderForm;
	var formmail : String = optedForm.customer.email.htmlValue;
	var convertedmail : String = formmail.toLowerCase();
	var brandmail : String = convertedmail + "_" + optedForm.states.brands.htmlValue;
	//var donationRequest : Object = dw.object.CustomObjectMgr.getCustomObject("DonationRequest", convertedmail);
	var decaldata : Object = dw.object.CustomObjectMgr.getCustomObject("DecalRequests", brandmail);
	//var guideOutfitter : Object = dw.object.CustomObjectMgr.getCustomObject("GuideAndOutFitters", convertedmail);
	//var sport : Object = dw.object.CustomObjectMgr.getCustomObject("SportingGoodsRetail", convertedmail);
	//var fieldstaff : Object = dw.object.CustomObjectMgr.getCustomObject("fieldstaff", convertedmail);
	//var industryData : Object = dw.object.CustomObjectMgr.getCustomObject("IndustryAffiliate", convertedmail);
	if(empty(decaldata)){
	decaldata = dw.object.CustomObjectMgr.createCustomObject("DecalRequests", brandmail);
	decaldata.getCustom().firstname = optedForm.customer.firstname.htmlValue;
	decaldata.getCustom().lastname = optedForm.customer.lastname.htmlValue;
	decaldata.getCustom().state = optedForm.states.state.htmlValue;
	decaldata.getCustom().city = optedForm.customer.city.htmlValue;
	decaldata.getCustom().email = convertedmail;
	decaldata.getCustom().zipcode = optedForm.customer.zip.htmlValue;
	decaldata.getCustom().phonenumber = optedForm.customer.phone.htmlValue;
	decaldata.getCustom().brand = optedForm.states.brands.htmlValue;
	decaldata.getCustom().streetAddress = optedForm.customer.streetAddress.htmlValue;
	decaldata.getCustom().streetAddress2 = optedForm.customer.streetAddress2.htmlValue;
	}
	else{
		return 'false';
	}
	return 'true';
}

module.exports = {
    decalData : decalData
};