/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.object );
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.catalog );
importPackage( dw.io );

function execute( args : PipelineDictionary ) : Number
{

      var filePath = File.IMPEX + File.SEPARATOR+"src"+File.SEPARATOR+"customization"+File.SEPARATOR+"Affiliate Data.csv";
      
      var csvReader : dw.io.CSVStreamReader = new CSVStreamReader( new FileReader( new File( filePath ) ) );

      try{
      	
	      var line =  csvReader.readNext();
	      
	      while(!empty(line)){
	      	   var affiliatesName : String = line[0];
	      	   //var newIcon : Boolean = line[];
	      	    var url : String = line[1];
	           var description : String = line[2];
	           var largeImage : String = line[4];
	           var tileImage : String = line[3];
	           
	           
	           if(empty(affiliatesName))     { affiliatesName = "";}
	           if(empty(url))       { url = "";}
	           if(empty(description))     { description = "";}
	           if(empty(largeImage)){largeImage = "";}
	           if(empty(tileImage)){tileImage = "";}
	           
               var uuid : String = dw.util.UUIDUtils.createUUID();
               var lineObj : CustomObject = CustomObjectMgr.createCustomObject("Affiliates",uuid);
               lineObj.custom.affiliatesid = affiliatesName;
	           lineObj.custom.affiliatesName = affiliatesName;
	      	   lineObj.custom.description = description;
	      	   lineObj.custom.url = url;
	      	   lineObj.custom.largeImage = largeImage;
	      	   lineObj.custom.tileimage = tileImage;
	      	  
			   
	      	   line =  csvReader.readNext();
	      }
      
      }catch(e){
      	 csvReader.close();
      	 Logger.error(" ERROR Downloading Pro Staff Data :: "+e);
      	 return PIPELET_ERROR;
      }
      csvReader.close();
      return PIPELET_NEXT;
}
