<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline can be used to export all of the customers that exist on a site after running the MarkSiteCustomersForExport pipeline below. This job will create a file for all of the customers in a site in batch sizes of 100 unless a job parameter named &quot;CustomersPerFile&quot; is passed in at runtime. 
/
The customer files can be found in the IMPEX/Upload directory.</description>
        </text-node>
        <node-display height="4" x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ExportAllSiteCustomers">
    <segment>
      <node>
        <start-node call-mode="private" name="ExportAllSiteCustomers" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="!empty(CurrentWorkflowComponentInstance.getParameterValue('customersPerFile'))?CurrentWorkflowComponentInstance.getParameterValue('customersPerFile').toString() : &quot;100&quot;" key="From_0"/>
          <key-binding alias="CustomersPerFile" key="To_0"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('lowerBound')" key="From_1"/>
          <key-binding alias="LowerBound" key="To_1"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('upperBound')" key="From_2"/>
          <key-binding alias="UpperBound" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/createCSSCustomers.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CustomersPerFile" key="CustomersPerFile"/>
          <key-binding alias="LowerBound" key="LowerBound"/>
          <key-binding alias="UpperBound" key="UpperBound"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="ERROR"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>This pipeline can be used to export all of the orders that exist on a site after running the MarkSiteOrdersForExport pipeline below. This job will create a file for all of the orders in a site in batch sizes of 100 unless a job parameter named &quot;OrdersPerFile&quot; is passed in at runtime. 
/
The order files can be found in the IMPEX/Upload directory.</description>
        </text-node>
        <node-display height="4" x="4" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ExportAllSiteOrders">
    <segment>
      <node>
        <start-node call-mode="private" name="ExportAllSiteOrders" secure="false"/>
        <node-display x="5" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="!empty(CurrentWorkflowComponentInstance.getParameterValue('ordersPerFile'))?CurrentWorkflowComponentInstance.getParameterValue('ordersPerFile').toString() : &quot;100&quot;" key="From_0"/>
          <key-binding alias="OrdersPerFile" key="To_0"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('lowerBound')" key="From_1"/>
          <key-binding alias="LowerBound" key="To_1"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('upperBound')" key="From_2"/>
          <key-binding alias="UpperBound" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/createCSSOrders.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="OrdersPerFile" key="OrdersPerFile"/>
          <key-binding alias="UpperBound" key="UpperBound"/>
          <key-binding alias="LowerBound" key="LowerBound"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="ERROR"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_5">
    <segment>
      <node>
        <text-node>
          <description>Use to instantiate the readyForExport flag for all customer objects on a site.</description>
        </text-node>
        <node-display x="1" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>Use to instantiate the exportedToCSS flag for all orders on a site.</description>
        </text-node>
        <node-display x="5" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="MarkSiteCustomersForExport">
    <segment>
      <node>
        <start-node call-mode="private" name="MarkSiteCustomersForExport" secure="false"/>
        <node-display x="1" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/prepareCustomersForExport2.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('lowerBound').toString()" key="LowerBound"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('upperBound').toString()" key="UpperBound"/>
          <key-binding alias="CurrentJobParameterMap.MaxRecords" key="MacRecords"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('maxRecords')" key="MaxRecords"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="ERROR"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="MarkSiteOrdersForExport">
    <segment>
      <node>
        <start-node call-mode="private" name="MarkSiteOrdersForExport" secure="false"/>
        <node-display x="5" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/prepareOrdersForExport.ds"/>
          <config-property key="Timeout" value="3600"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('lowerBound')" key="LowerBound"/>
          <key-binding alias="CurrentWorkflowComponentInstance.getParameterValue('upperBound')" key="UpperBound"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="ERROR"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="OK"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
