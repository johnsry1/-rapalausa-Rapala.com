<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="Service" type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Main Entry point for the Express Checkout flow. Should be called from a payment processor pipeline</description>
        </text-node>
        <node-display x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>Entry point for the PayPal Credit/Easy Payments flow. Should be called from a payment processor pipeline</description>
        </text-node>
        <node-display x="3" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="StartExpressCheckoutFlow">
    <segment>
      <node>
        <start-node call-mode="private" name="StartExpressCheckoutFlow" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="LineItemContainer" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2">
            <transition-display>
              <bend-point relative-to="source" x="6" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <join-node/>
              <node-display x="3" y="3"/>
            </node>
            <transition target-connector="in1" target-path="../+2/b2.1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="true === PaypalCheckoutFromCart" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="Set Return URL" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="ReturnFromPaypalCallbackUrl" key="To_0"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="dw.web.URLUtils.httpsContinue()" key="From_0"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Set Return URL" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="ReturnFromPaypalCallbackUrl" key="To_0"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="dw.web.URLUtils.https('COBilling-Start')" key="From_0"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in3" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Paypal-SetExpressCheckout"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="Error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="3" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="2" y="-1"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="true === PaypalCheckoutFromCart" condition-operator="expr"/>
              <node-display x="-1" y="2"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <call-node start-name-ref="Paypal-ErrorHandling"/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="dw.web.URLUtils.https(OnErrorReturnTo)" key="From_0"/>
                      <key-binding alias="Location" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <interaction-node transaction-required="false">
                      <description>Redirect to Cart-Show</description>
                      <template buffered="true" dynamic="false" name="util/redirect"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="Error"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="Ok">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node custom-name="Prepare Data for RedirectToPaypal" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="SetExpressCheckoutRequestContainer.method" key="From_0"/>
                <key-binding alias="PaypalApiMethod" key="To_0"/>
                <key-binding alias="SetExpressCheckoutResponseContainer.data" key="From_1"/>
                <key-binding alias="ResponseData" key="To_1"/>
                <key-binding alias="SetExpressCheckoutResponseContainer.data.token" key="From_2"/>
                <key-binding alias="Token" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Paypal-RedirectToPaypal"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="Error">
                <transition target-connector="in2" target-path="../b2.2"/>
              </branch>
              <branch basename="b3" source-connector="Ok">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <call-node start-name-ref="Paypal-GetExpressCheckout"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="Error">
                      <transition target-connector="in2" target-path="../../b2.3"/>
                    </branch>
                    <branch basename="b3" source-connector="Ok">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <decision-node condition-key="true === PaypalCheckoutFromCart" condition-operator="expr"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="yes">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="0" y="1"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <pipelet-node custom-name="Set Pipeline for Express Checkout From Cart" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="dw.web.Resource.msg('paypal.onexpresscheckoutfromcart', 'preferences', 'COShipping-Start')" key="From_0"/>
                                  <key-binding alias="OnExpressCheckoutFromCartTo" key="To_0"/>
                                  <key-binding alias="null" key="From_1"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition/>
                              <node>
                                <pipelet-node custom-name="Set Billing Form as fullfilled" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="true" key="From_0"/>
                                  <key-binding alias="CurrentForms.billing.fulfilled.value" key="To_0"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                                  <config-property key="Transactional" value="false"/>
                                  <key-binding alias="dw.web.URLUtils.https(OnExpressCheckoutFromCartTo)" key="From_0"/>
                                  <key-binding alias="Location" key="To_0"/>
                                  <key-binding alias="null" key="From_1"/>
                                  <key-binding alias="null" key="To_1"/>
                                  <key-binding alias="null" key="From_2"/>
                                  <key-binding alias="null" key="To_2"/>
                                  <key-binding alias="null" key="From_3"/>
                                  <key-binding alias="null" key="To_3"/>
                                  <key-binding alias="null" key="From_4"/>
                                  <key-binding alias="null" key="To_4"/>
                                  <key-binding alias="null" key="From_5"/>
                                  <key-binding alias="null" key="To_5"/>
                                  <key-binding alias="null" key="From_6"/>
                                  <key-binding alias="null" key="To_6"/>
                                  <key-binding alias="null" key="From_7"/>
                                  <key-binding alias="null" key="To_7"/>
                                  <key-binding alias="null" key="From_8"/>
                                  <key-binding alias="null" key="To_8"/>
                                  <key-binding alias="null" key="From_9"/>
                                  <key-binding alias="null" key="To_9"/>
                                </pipelet-node>
                                <node-display x="0" y="1"/>
                              </node>
                              <simple-transition>
                                <transition-display>
                                  <bend-point relative-to="source" x="0" y="1"/>
                                </transition-display>
                              </simple-transition>
                              <node>
                                <interaction-node transaction-required="false">
                                  <description>Redirect to Cart-Show</description>
                                  <template buffered="true" dynamic="false" name="util/redirect"/>
                                </interaction-node>
                                <node-display x="0" y="1"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition>
                          <transition-display>
                            <bend-point relative-to="source" x="2" y="0"/>
                          </transition-display>
                        </simple-transition>
                        <node>
                          <end-node name="Ok"/>
                          <node-display x="1" y="4"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                </segment>
              </branch>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="PayPalCredit">
    <segment>
      <node>
        <start-node call-mode="private" name="PayPalCredit" secure="false"/>
        <node-display x="3" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="true" key="From_0"/>
          <key-binding alias="PayPalCredit" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in3" target-path="/StartExpressCheckoutFlow.2"/>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_5">
    <segment>
      <node>
        <text-node>
          <description>Entry Point for the Express Checkout from cart. Should be linked from template.</description>
        </text-node>
        <node-display x="5" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_6">
    <segment>
      <node>
        <text-node>
          <description>Entry Point for the Credit/Easy Payments from cart. Should be linked from template.</description>
        </text-node>
        <node-display x="7" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="StartExpressCheckoutFromCartFlow">
    <segment>
      <node>
        <start-node call-mode="public" name="StartExpressCheckoutFromCartFlow" secure="true"/>
        <node-display x="5" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="target" x="-2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="true" key="From_0"/>
          <key-binding alias="PaypalCheckoutFromCart" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="source" x="-1" y="1"/>
          <bend-point relative-to="source" x="-1" y="-1"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Paypal-PrepareForCheckoutFromCart"/>
        <node-display x="-3" y="0"/>
        <branch basename="b2" source-connector="Error">
          <transition target-connector="in1" target-path="/StartExpressCheckoutFlow.2/b2.1"/>
        </branch>
        <branch basename="b3" source-connector="Ok">
          <transition target-connector="in1" target-path="/StartExpressCheckoutFlow.3"/>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="StartPayPalCreditFromCartFlow">
    <segment>
      <node>
        <start-node name="StartPayPalCreditFromCartFlow" secure="true"/>
        <node-display x="7" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="true" key="From_0"/>
          <key-binding alias="PayPalCredit" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in3" target-path="/StartExpressCheckoutFromCartFlow.2">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_9">
    <segment>
      <node>
        <text-node>
          <description>This pipeline must be called to authorize/capture transaction. It should be called from payment processor pipeline</description>
        </text-node>
        <node-display x="9" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="CommitTransaction">
    <segment>
      <node>
        <start-node call-mode="private" name="CommitTransaction" secure="false"/>
        <node-display x="9" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Paypal-DoExpressCheckout"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="Error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="DoExpressCheckoutResponseContainer.data" key="From_0"/>
                <key-binding alias="ResponseData" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="Paypal-RedirectError"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="Continue">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="Error"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="Ok">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="Paypal-AutorizationAfterOrder"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="Error">
                <transition target-connector="in2" target-path="../b2.2"/>
              </branch>
              <branch basename="b3" source-connector="Ok">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="Ok"/>
                    <node-display x="0" y="3"/>
                  </node>
                </segment>
              </branch>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_11">
    <segment>
      <node>
        <text-node>
          <description>Redirect to PayPal and returen back to Demandware store</description>
        </text-node>
        <node-display x="12" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_12">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to preparing basket and payment instruments before proceed to PayPal</description>
        </text-node>
        <node-display x="15" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="RedirectToPaypal">
    <segment>
      <node>
        <start-node call-mode="private" name="RedirectToPaypal" secure="false"/>
        <node-display x="12" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/CreatePaypalRedirectUrl.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaypalApiMethod" key="PaypalApiMethod"/>
          <key-binding alias="PaypalRedirectUrl" key="PaypalRedirectUrl"/>
          <key-binding alias="Token" key="Token"/>
          <key-binding alias="PayPalCredit" key="PaypalCredit"/>
          <key-binding alias="OrderID" key="OrderID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="4" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="Error"/>
              <node-display x="2" y="3"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="true === PaypalCheckoutFromCart" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-continue-node secure="false" start-name="RedirectToPaypalContinue" transaction-required="false">
                <template buffered="true" dynamic="false" name="paypal/util/redirect"/>
              </interaction-continue-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="Get token and payerID." pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentHttpParameterMap.get('retry_authorization').booleanValue ? Token : CurrentHttpParameterMap.get('token').getRawValue()" key="From_0"/>
                <key-binding alias="ExpressCheckoutToken" key="To_0"/>
                <key-binding alias="CurrentHttpParameterMap.get('PayerID').getRawValue()" key="From_1"/>
                <key-binding alias="ExpressCheckoutPayerId" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Ok"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <stop-node name="STOP_EXECUTION"/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="PrepareForCheckoutFromCart">
    <segment>
      <node>
        <start-node call-mode="private" name="PrepareForCheckoutFromCart" secure="false"/>
        <node-display x="15" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="StoredBasket" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="4" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/RemovePaymentInstruments.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Basket" key="From_0"/>
          <key-binding alias="LineItemContainer" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="CreateBillingAddress" pipelet-set-identifier="bc_api">
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="BillingAddress" key="Address"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="CreateShippingAddress" pipelet-set-identifier="bc_api">
          <key-binding alias="Basket.defaultShipment" key="Shipment"/>
          <key-binding alias="ShippingAddress" key="Address"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="PAYPAL_EXPRESS-Handle"/>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b5" source-connector="success">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="Ok"/>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_15">
    <segment>
      <node>
        <text-node>
          <description>Handling for payment action. Should be called from a payment procssor pipeline</description>
        </text-node>
        <node-display x="19" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="Handle">
    <segment>
      <node>
        <start-node call-mode="private" name="Handle" secure="false"/>
        <node-display x="19" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="true !== PaypalCheckoutFromCart" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <decision-node condition-key="!dw.system.Site.getCurrent().getCustomPreferenceValue('PP_EnableIncontextCheckout')" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <call-node start-name-ref="Paypal-StartExpressCheckoutFlow"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="Error">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="target" x="0" y="-1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <end-node name="Error"/>
                          <node-display x="-1" y="1"/>
                        </node>
                      </segment>
                    </branch>
                    <branch basename="b3" source-connector="Ok">
                      <transition target-connector="in1" target-path="../+1"/>
                    </branch>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Paypal-IncontextCheckout"/>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in3" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in3" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="4" y="0"/>
          <bend-point relative-to="target" x="4" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="4"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to handle returning from incontext checkout</description>
        </text-node>
        <node-display x="7" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="ReturnFromIncontext">
    <segment>
      <node>
        <start-node call-mode="public" name="ReturnFromIncontext" secure="true"/>
        <node-display x="7" y="7"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="null" key="StoredBasket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b4.1">
            <transition-display>
              <bend-point relative-to="source" x="4" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.get('retry_authorization').booleanValue ?  Basket.paymentInstrument.getCustom().paypalToken : CurrentHttpParameterMap.get('token').stringValue" key="From_1"/>
          <key-binding alias="ExpressCheckoutToken" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="PaypalCheckoutFromCart" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.get('checkoutFromtCart').booleanValue" key="From_0"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="PaypalCheckoutFromCart" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="Paypal-PrepareForCheckoutFromCart"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="Error">
                <transition target-connector="in2" target-path="../b4.1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="1"/>
                    <bend-point relative-to="target" x="-1" y="1"/>
                  </transition-display>
                </transition>
              </branch>
              <branch basename="b3" source-connector="Ok">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/CreatePaymentInstrument.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Basket" key="LineItemCtnr"/>
          <key-binding alias="true" key="RemoveExisting"/>
          <key-binding alias="&quot;PayPal&quot;" key="PaymentType"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../+1/b2.1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Paypal-GetExpressCheckout"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="Error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="3"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="Ok">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node custom-name="Set Pipeline for Express Checkout From Cart" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.Resource.msg('paypal.onexpresscheckoutfromcart', 'preferences', 'COShipping-Start')" key="From_0"/>
                <key-binding alias="OnExpressCheckoutFromCartTo" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node custom-name="Set Billing Form as fullfilled" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="true" key="From_0"/>
                <key-binding alias="CurrentForms.billing.fulfilled.value" key="To_0"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.URLUtils.https(OnExpressCheckoutFromCartTo)" key="From_0"/>
                <key-binding alias="Location" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <description>Redirect to Cart-Show</description>
                <template buffered="true" dynamic="false" name="util/redirect"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_19">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to handle incondex checkout</description>
        </text-node>
        <node-display x="10" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_20">
    <segment>
      <node>
        <text-node>
          <description>Authorize payment after 'Order' transaction type, if proper option is enable</description>
        </text-node>
        <node-display x="13" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="HandlePayPalResponse">
    <segment>
      <node>
        <start-node call-mode="private" name="HandlePayPalResponse" secure="false"/>
        <node-display x="0" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Get token and payerID." pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.get('retry_authorization').booleanValue ? Token : CurrentHttpParameterMap.get('token').getRawValue()" key="From_0"/>
          <key-binding alias="ExpressCheckoutToken" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.get('PayerID').getRawValue()" key="From_1"/>
          <key-binding alias="ExpressCheckoutPayerId" key="To_1"/>
          <key-binding alias="false" key="From_2"/>
          <key-binding alias="PaypalCheckoutFromCart" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="Basket" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="-1"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="/StartExpressCheckoutFlow.4/b3.1/b3.1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
  </branch>
  <branch basename="IncontextCheckout">
    <segment>
      <node>
        <start-node call-mode="public" name="IncontextCheckout" secure="true"/>
        <node-display x="10" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetBasket" pipelet-set-identifier="bc_api">
          <config-property key="Create" value="false"/>
          <key-binding alias="LineItemContainer" key="Basket"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1/b2.1">
            <transition-display>
              <bend-point relative-to="source" x="4" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="PaypalCheckoutFromCart || CurrentHttpParameterMap.get('checkoutFromtCart').booleanValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.URLUtils.https('Paypal-ReturnFromIncontext', 'checkoutFromtCart', 'true')" key="From_0"/>
                <key-binding alias="ReturnFromPaypalCallbackUrl" key="To_0"/>
                <key-binding alias="true" key="From_1"/>
                <key-binding alias="PaypalCheckoutFromCart" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Paypal-PrepareForCheckoutFromCart"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="Error">
                <transition target-connector="in2"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../../+1/b2.1"/>
                </segment>
              </branch>
              <branch basename="b3" source-connector="Ok">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.web.URLUtils.https('Paypal-ReturnFromIncontext', 'checkoutFromtCart', 'false')" key="From_0"/>
          <key-binding alias="ReturnFromPaypalCallbackUrl" key="To_0"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Paypal-SetExpressCheckout"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="Error">
          <transition target-connector="in1">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="paypal/incontexterror"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="Ok">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="data/CreateIncontextUrl.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="PaypalRedirectUrl" key="PaypalRedirectUrl"/>
                <key-binding alias="SetExpressCheckoutResponseContainer.data.token" key="Token"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="../b2.1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="paypal/util/redirect"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="AutorizationAfterOrder">
    <segment>
      <node>
        <start-node call-mode="private" name="AutorizationAfterOrder" secure="false"/>
        <node-display x="13" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="dw.system.Site.getCurrent().getCustomPreferenceValue('PP_AuthorizationInCaseOfOrder') &amp;&amp; !PaymentInstrument.getCustom().paypalCredit &amp;&amp; DoExpressCheckoutResponseContainer.data.paymentinfo_0_pendingreason === 'order'" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="new Object()" key="From_0"/>
                <key-binding alias="DoExpressCheckoutResponseContainer.data.paymentinfo_0_transactionid" key="From_1"/>
                <key-binding alias="PaypalDoAuthorization.transactionID" key="To_1"/>
                <key-binding alias="DoExpressCheckoutResponseContainer.data.paymentinfo_0_amt" key="From_2"/>
                <key-binding alias="PaypalDoAuthorization.amount" key="To_2"/>
                <key-binding alias="Order.getCurrencyCode()" key="From_3"/>
                <key-binding alias="PaypalDoAuthorization.currency" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="PaypalDoAuthorization" key="To_0"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Paypal-DoAuthorization"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="Error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="DoAuthorizationResponseContainer.data" key="From_0"/>
                      <key-binding alias="ResponseData" key="To_0"/>
                      <key-binding alias="DoExpressCheckoutResponseContainer.data.paymentinfo_0_transactionid" key="From_1"/>
                      <key-binding alias="OrderID" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="1" y="2"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="Error"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
              <branch basename="b3" source-connector="Ok">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in3" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="3"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_24">
    <segment>
      <node>
        <text-node>
          <description>Redirect user back to PayPal in case of 10486 error</description>
        </text-node>
        <node-display x="19" y="8"/>
      </node>
    </segment>
  </branch>
  <branch basename="RedirectError">
    <segment>
      <node>
        <start-node call-mode="private" name="RedirectError" secure="false"/>
        <node-display x="19" y="9"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/ParseErrorCodes.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="ResponseData" key="setExpressCheckoutResponseData"/>
          <key-binding alias="ErrorCode" key="errorCodeMatch"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="ErrorCode" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="DoExpressCheckoutRequestContainer.method" key="From_0"/>
                <key-binding alias="PaypalApiMethod" key="To_0"/>
                <key-binding alias="Token" key="To_1"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
                <key-binding alias="DoExpressCheckoutRequestContainer.data.TOKEN" key="From_1"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="FailOrder" pipelet-set-identifier="bc_api">
                <key-binding alias="Order" key="Order"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+2">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="Paypal-RedirectToPaypal"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="Error">
                <transition target-connector="in1" target-path="../+2"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="Ok"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="3"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="Continue"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ErrorHandling">
    <segment>
      <node>
        <start-node call-mode="private" name="ErrorHandling" secure="false"/>
        <node-display x="16" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/CreatePaypalErrorMessage.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="SetExpressCheckoutResponseContainer.data" key="ResponseData"/>
          <key-binding alias="PayPalErrorMessage" key="PayPalErrorMessage"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="true === PaypalCheckoutFromCart" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node custom-name="Set Return To Pipeline" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <description>Set Return To Pipeline</description>
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.Resource.msg('paypal.onexpressfromcarterror', 'preferences', 'Cart-Show')" key="From_0"/>
                <key-binding alias="OnErrorReturnTo" key="To_0"/>
                <key-binding alias="PayPalErrorMessage" key="From_1"/>
                <key-binding alias="CartError" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="PaypalCheckoutFromCart" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Set Return To Pipeline" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <description>Set Return To Pipeline</description>
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.web.Resource.msg('paypal.onexpressfrompaymentpageerror', 'preferences', 'COBilling-Start')" key="From_0"/>
          <key-binding alias="OnErrorReturnTo" key="To_0"/>
          <key-binding alias="PayPalErrorMessage" key="From_1"/>
          <key-binding alias="BillingError" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in3" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Continue"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_27">
    <segment>
      <node>
        <text-node>
          <description>Set pipeline name for jumpnode, and remove variable PaypalCheckoutFromCart</description>
        </text-node>
        <node-display x="17" y="15"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_28">
    <segment>
      <node>
        <text-node>
          <description>Continue order placing flow on site genesis site</description>
        </text-node>
        <node-display x="0" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_29">
    <segment>
      <node>
        <text-node>
          <description>Create data for SetExpressCheckout API call, do it and handle the result</description>
        </text-node>
        <node-display x="1" y="18"/>
      </node>
    </segment>
  </branch>
  <branch basename="SetExpressCheckout">
    <segment>
      <node>
        <start-node call-mode="private" name="SetExpressCheckout" secure="false"/>
        <node-display x="1" y="19"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateSetExpressCheckoutRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="LineItemContainer" key="LineItemContainer"/>
          <key-binding alias="ReturnFromPaypalCallbackUrl" key="ReturnFromPaypalCallbackUrl"/>
          <key-binding alias="SetExpressCheckoutRequestContainer" key="SetExpressCheckoutRequestContainer"/>
          <key-binding alias="PayPalCredit" key="IsPayPalCredit"/>
          <key-binding alias="true" key="BillingAgreement"/>
          <key-binding alias="PaypalCheckoutFromCart" key="PaypalCheckoutFromCart"/>
          <key-binding alias="false" key="isStore"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="SetExpressCheckoutRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="SetExpressCheckoutResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="SetExpressCheckoutResponseContainer" key="ResponseContainer"/>
          <key-binding alias="SetExpressCheckoutRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_31">
    <segment>
      <node>
        <text-node>
          <description>Create data for GetExpressCheckout API call, do it and handle the result</description>
        </text-node>
        <node-display x="5" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetExpressCheckout">
    <segment>
      <node>
        <start-node call-mode="private" name="GetExpressCheckout" secure="false"/>
        <node-display x="5" y="18"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateGetExpressCheckoutDetailsRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="ExpressCheckoutToken" key="ExpressCheckoutToken"/>
          <key-binding alias="GetExpressCheckoutDetailsRequestContainer" key="GetExpressCheckoutDetailsRequestData"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="GetExpressCheckoutDetailsRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="GetExpressCheckoutDetailsResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="GetExpressCheckoutDetailsResponseContainer" key="ResponseContainer"/>
          <key-binding alias="GetExpressCheckoutDetailsRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1" target-path="./b5.1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/SaveExpressCheckoutData.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Basket" key="LineItemContainer"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
          <key-binding alias="GetExpressCheckoutDetailsResponseContainer" key="GetExpressCheckoutDetailsResponseContainer"/>
          <key-binding alias="PaypalCheckoutFromCart" key="PaypalCheckoutFromCart"/>
          <key-binding alias="PayPalCredit" key="PayPalCredit"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="-1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node custom-name="Set Return To Pipeline" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <description>Set Return To Pipeline</description>
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.Resource.msg('paypal.onexpressfromcarterror', 'preferences', 'Cart-Show')" key="From_0"/>
                <key-binding alias="OnErrorReturnTo" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="PaypalCheckoutFromCart" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="util/CreatePaypalErrorMessage.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="GetExpressCheckoutDetailsResponseContainer.data" key="ResponseData"/>
                <key-binding alias="CartError" key="PayPalErrorMessage"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="true === PaypalCheckoutFromCart" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="dw.web.URLUtils.https(OnErrorReturnTo)" key="From_0"/>
                      <key-binding alias="Location" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <interaction-node transaction-required="false">
                      <description>Redirect to Cart-Show</description>
                      <template buffered="true" dynamic="false" name="util/redirect"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="Error"/>
              <node-display x="1" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_33">
    <segment>
      <node>
        <text-node>
          <description>Continue order placing flow on site genesis site</description>
        </text-node>
        <node-display x="7" y="18"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_34">
    <segment>
      <node>
        <text-node>
          <description>Redirect user to PayPal</description>
        </text-node>
        <node-display x="10" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_35">
    <segment>
      <node>
        <text-node>
          <description>Create data for DoExpressCheckout API call, do it and save transaction result</description>
        </text-node>
        <node-display x="9" y="18"/>
      </node>
    </segment>
  </branch>
  <branch basename="DoExpressCheckout">
    <segment>
      <node>
        <start-node call-mode="private" name="DoExpressCheckout" secure="false"/>
        <node-display x="9" y="19"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateDoExpressCheckoutRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Order" key="LineItemContainer"/>
          <key-binding alias="DoExpressCheckoutRequestContainer" key="DoExpressCheckoutRequestData"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b3.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoExpressCheckoutRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="DoExpressCheckoutResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoExpressCheckoutResponseContainer" key="ResponseContainer"/>
          <key-binding alias="DoExpressCheckoutRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/SaveTransactionResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="Order" key="LineItemContainer"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
          <key-binding alias="DoExpressCheckoutResponseContainer" key="DoExpressCheckoutResponseContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_37">
    <segment>
      <node>
        <text-node>
          <description>Close incontext minibrowser in case of error</description>
        </text-node>
        <node-display x="12" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_38">
    <segment>
      <node>
        <text-node>
          <description>Create data for DoDirectPayment API call, do it and save transaction result</description>
        </text-node>
        <node-display x="13" y="18"/>
      </node>
    </segment>
  </branch>
  <branch basename="DoDirectPayment">
    <segment>
      <node>
        <start-node call-mode="private" name="DoDirectPayment" secure="false"/>
        <node-display x="13" y="19"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateDirectPaymentRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.cvn.value" key="Cvn"/>
          <key-binding alias="Order" key="Order"/>
          <key-binding alias="CurrentRequest" key="Request"/>
          <key-binding alias="DirectPaymentRequestContainer" key="DirectPaymentRequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DirectPaymentRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="DirectPaymentResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="FailOrder" pipelet-set-identifier="bc_api">
                <key-binding alias="Order" key="Order"/>
              </pipelet-node>
              <node-display x="2" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.web.URLUtils.https('COBilling-Start','PlaceOrderError','true')" key="From_0"/>
                <key-binding alias="Location" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <description>Redirect to Cart-Show</description>
                <template buffered="true" dynamic="false" name="util/redirect"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DirectPaymentResponseContainer" key="ResponseContainer"/>
          <key-binding alias="DirectPaymentRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetPaymentProcessor" pipelet-set-identifier="bc_api">
          <key-binding alias="'PAYPAL_CREDIT'" key="ID"/>
          <key-binding alias="PaypalPaymentsPro" key="PaymentProcessor"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b6.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/SaveDirectPaymentTransactionResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DirectPaymentResponseContainer.data" key="DirectPaymentResponseContainer"/>
          <key-binding alias="Order" key="Order"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
          <key-binding alias="PaypalPaymentsPro" key="PaymentProcessor"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b6" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_40">
    <segment>
      <node>
        <text-node>
          <description>Pipeline for  transactions search using TransactionSearch API call</description>
        </text-node>
        <node-display x="17" y="18"/>
      </node>
    </segment>
  </branch>
  <branch basename="TransactionSearch">
    <segment>
      <node>
        <start-node call-mode="private" name="TransactionSearch" secure="false"/>
        <node-display x="17" y="19"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateTransactionSearchRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaypalTransactionSearch.startDate" key="STARTDATE"/>
          <key-binding alias="TransactionSearchRequestContainer" key="TransactionSearchRequestContainer"/>
          <key-binding alias="PaypalTransactionSearch.amt" key="AMT"/>
          <key-binding alias="PaypalTransactionSearch.currencyCode" key="CURRENCYCODE"/>
          <key-binding alias="PaypalTransactionSearch.endDate" key="ENDDATE"/>
          <key-binding alias="PaypalTransactionSearch.firstName" key="FIRSTNAME"/>
          <key-binding alias="PaypalTransactionSearch.invNum" key="INVNUM"/>
          <key-binding alias="PaypalTransactionSearch.lastName" key="LASTNAME"/>
          <key-binding alias="PaypalTransactionSearch.middleName" key="MIDDLENAME"/>
          <key-binding alias="PaypalTransactionSearch.receipID" key="RECEIPTID"/>
          <key-binding alias="PaypalTransactionSearch.receiver" key="RECEIVER"/>
          <key-binding alias="PaypalTransactionSearch.salutation" key="SALUTATION"/>
          <key-binding alias="PaypalTransactionSearch.status" key="STATUS"/>
          <key-binding alias="PaypalTransactionSearch.suffix" key="SUFFIX"/>
          <key-binding alias="PaypalTransactionSearch.transactionClass" key="TRANSACTIONCLASS"/>
          <key-binding alias="PaypalTransactionSearch.transactionID" key="TRANSACTIONID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/TransactionSearchApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="TransactionSearchRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="TransactionSearchResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="TransactionSearchResponseContainer" key="ResponseContainer"/>
          <key-binding alias="TransactionSearchRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_42">
    <segment>
      <node>
        <text-node>
          <description>Create data for DoDIrectPayment API call, do it and save transaction result</description>
        </text-node>
        <node-display x="21" y="18"/>
      </node>
    </segment>
  </branch>
  <branch basename="RefundTransaction">
    <segment>
      <node>
        <start-node call-mode="private" name="RefundTransaction" secure="false"/>
        <node-display x="21" y="19"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateRefundTransactionRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaypalRefundTransaction.transactionID" key="TRANSACTIONID"/>
          <key-binding alias="PaypalRefundTransaction.amount" key="AMT"/>
          <key-binding alias="PaypalRefundTransaction.type" key="REFUNDTYPE"/>
          <key-binding alias="RefundTransactionRequestContainer" key="RefundTransactionRequestContainer"/>
          <key-binding alias="PaypalRefundTransaction.invoiceID" key="INVOICEID"/>
          <key-binding alias="PaypalRefundTransaction.source" key="REFUNDSOURCE"/>
          <key-binding alias="PaypalRefundTransaction.until" key="RETRYUNTIL"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="RefundTransactionRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="RefundDataResponse" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_44">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to get details about single transaction using transaction ID</description>
        </text-node>
        <node-display x="1" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetTransactionDetails">
    <segment>
      <node>
        <start-node call-mode="private" name="GetTransactionDetails" secure="false"/>
        <node-display x="1" y="27"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateGetTransactionDetalisRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="TransactionID" key="TransactionId"/>
          <key-binding alias="GetTransactionDetalisRequestContainer" key="GetTransactionDetalisRequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="GetTransactionDetalisRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="GetTransactionDetalisResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="GetTransactionDetalisResponseContainer" key="ResponseContainer"/>
          <key-binding alias="GetTransactionDetalisRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_46">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to capture funds from 'Authorize' or 'Order' payment transaction</description>
        </text-node>
        <node-display x="5" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="DoAuthorization">
    <segment>
      <node>
        <start-node call-mode="private" name="DoAuthorization" secure="false"/>
        <node-display x="5" y="27"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateAutorizationRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaypalDoAuthorization.currency" key="CURRENCYCODE"/>
          <key-binding alias="PaypalDoAuthorization.transactionID" key="TRANSACTIONID"/>
          <key-binding alias="PaypalDoAuthorization.amount" key="AMT"/>
          <key-binding alias="DoAuthorizationRequestContainer" key="DoAuthorizationRequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoAuthorizationRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="DoAuthorizationResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoAuthorizationResponseContainer" key="ResponseContainer"/>
          <key-binding alias="DoAuthorizationRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b5.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/ChangeTransactionID.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
          <key-binding alias="DoAuthorizationResponseContainer.data.transactionid" key="TransactionID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b5" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_48">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to reauthorizes an existing authorization transaction</description>
        </text-node>
        <node-display x="9" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="DoReauthorization">
    <segment>
      <node>
        <start-node call-mode="private" name="DoReauthorization" secure="false"/>
        <node-display x="9" y="27"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateDoReauthorizationRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaypalDoReauthorization.amount" key="AMT"/>
          <key-binding alias="PaypalDoReauthorization.authorizationID" key="AUTHORIZATIONID"/>
          <key-binding alias="PaypalDoReauthorization.currency" key="CURRENCYCODE"/>
          <key-binding alias="DoReauthorizationRequestContainer" key="DoReauthorizationRequestContainer"/>
          <key-binding alias="PaypalDoReauthorization.msgSubID" key="MSGSUBID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoReauthorizationRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="DoReauthorizationResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoReauthorizationResponseContainer" key="ResponseContainer"/>
          <key-binding alias="DoReauthorizationRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_50">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to void an order or an authorization.</description>
        </text-node>
        <node-display x="13" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="DoVoid">
    <segment>
      <node>
        <start-node call-mode="private" name="DoVoid" secure="false"/>
        <node-display x="13" y="27"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateDoVoidRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaypalDoVoid.authorizationID" key="AUTHORIZATIONID"/>
          <key-binding alias="DoVoidRequestContainer" key="DoVoidRequestContainer"/>
          <key-binding alias="PaypalDoVoid.note" key="NOTE"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoVoidRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="DoVoidResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoVoidResponseContainer" key="ResponseContainer"/>
          <key-binding alias="DoVoidRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_52">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to captures an authorized payment</description>
        </text-node>
        <node-display x="17" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="DoCapture">
    <segment>
      <node>
        <start-node call-mode="private" name="DoCapture" secure="false"/>
        <node-display x="17" y="27"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateDoCaptureRequestContainer.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="PaypalDoCapture.amount" key="AMT"/>
          <key-binding alias="PaypalDoCapture.authorizationID" key="AUTHORIZATIONID"/>
          <key-binding alias="PaypalDoCapture.completeType" key="COMPLETETYPE"/>
          <key-binding alias="PaypalDoCapture.currency" key="CURRENCYCODE"/>
          <key-binding alias="DoCaptureRequestContainer" key="DoCaptureRequestContainer"/>
          <key-binding alias="PaypalDoCapture.note" key="NOTE"/>
          <key-binding alias="PaypalDoCapture.invNum" key="INVNUM"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoCaptureResponseContainer" key="ResponseDataContainer"/>
          <key-binding alias="DoCaptureRequestContainer" key="RequestDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="DoCaptureResponseContainer" key="ResponseContainer"/>
          <key-binding alias="DoCaptureRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_54">
    <segment>
      <node>
        <text-node>
          <description>Pipeline to process payment from buyers who
have a current billing agreement with the merchant</description>
        </text-node>
        <node-display width="2" x="21" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="DoReferenceTransaction">
    <segment>
      <node>
        <start-node call-mode="private" name="DoReferenceTransaction" secure="false"/>
        <node-display x="21" y="27"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/CreateReferenceTransactionRequestData.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="ReferenceTransactionRequestContainer" key="ReferenceTransactionRequestContainer"/>
          <key-binding alias="DoReferenceTransaction.acct" key="ACCT"/>
          <key-binding alias="DoReferenceTransaction.creditCartType" key="CREDITCARDTYPE"/>
          <key-binding alias="DoReferenceTransaction.cvv2" key="CVV2"/>
          <key-binding alias="DoReferenceTransaction.epirationDate" key="EXPDATE"/>
          <key-binding alias="DoReferenceTransaction.invoiceNumber" key="INVNUM"/>
          <key-binding alias="DoReferenceTransaction.lineItemContainer" key="LineItemContainer"/>
          <key-binding alias="DoReferenceTransaction.referenceID" key="REFERENCEID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="ReferenceTransactionRequestContainer" key="RequestDataContainer"/>
          <key-binding alias="ReferenceTransactionResponseContainer" key="ResponseDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="ReferenceTransactionResponseContainer" key="ResponseContainer"/>
          <key-binding alias="ReferenceTransactionRequestContainer" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_56">
    <segment>
      <node>
        <text-node>
          <description>Call any PayPal API method by name and method parameters</description>
        </text-node>
        <node-display x="24" y="26"/>
      </node>
    </segment>
  </branch>
  <branch basename="CallApiMethod">
    <segment>
      <node>
        <start-node call-mode="private" name="CallApiMethod" secure="false"/>
        <node-display x="24" y="27"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/PrepareApiRequestData.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="MethodName" key="MethodName"/>
          <key-binding alias="RequestData" key="RequestData"/>
          <key-binding alias="MethodData" key="MethodData"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="service/RunApiOperation.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="ResponseData" key="ResponseDataContainer"/>
          <key-binding alias="RequestData" key="RequestDataContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../b4.1"/>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="data/HandleApiResult.ds"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="ResponseData" key="ResponseContainer"/>
          <key-binding alias="RequestData" key="RequestContainer"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="Error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <end-node name="Ok"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
